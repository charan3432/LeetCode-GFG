
Using Single Binary Search

// User function Template for Java

class Solution {
    int search(int[] arr, int key) {
        // Complete this function
        int n = arr.length;
        int low=0, high=n-1;
        
        while(low <= high) {
            int mid = (low+high)/2;
            
            if(arr[mid] == key)
                return mid;
                
            if(arr[low] <= arr[mid]) {
                if(key>=arr[low] && key<arr[mid]) {
                    high = mid-1;
                }
                else {
                    low = mid+1;
                }
            }
            else {
                if(key<=arr[high] && key>arr[mid]) {
                    low = mid+1;
                }
                else {
                    high = mid-1;
                }
            }
        }
        return -1;
    }
}


Using Linear Search

// User function Template for Java

class Solution {
    int search(int[] arr, int key) {
        // Complete this function
        int n = arr.length;
        for(int i=0;i<n;i++) {
            if(arr[i] == key) {
                return i;
            }
        }
        return -1;
    }
}
